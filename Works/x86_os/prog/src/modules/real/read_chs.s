read_chs:
        ;--------------------------------------- 
        ; 【スタック フレーム の 構築】 
        ;--------------------------------------- 
                                        ; + 8 | コピー 先 
                                        ; + 6 | セクタ 数 
                                        ; + 4 | パラメータ バッファ 
                                        ; ------+---------------- 
                                        ; + 2 | IP（ 戻り 番地） 
        push    bp                      ; BP + 0 | BP（ 元 の 値）
        mov     bp, sp                  ; ------+-------- 
        push    3                       ; - 2 | retry = 3; // リトライ 回数 
        push    0                       ; - 4 | sect = 0; // 読み込み セクタ 数 

        
        ;--------------------------------------- 
        ; 【レジスタ の 保存】 
        ;--------------------------------------- 
        push    bx 
        push    cx 
        push    dx 
        push    es 
        push    si 

        ;--------------------------------------- 
        ; 【処理 の 開始】 
        ;--------------------------------------- 
        mov     si, [bp + 4] ; SI = SRC バッファ; 

        ;--------------------------------------- 
        ; CX レジスタ の 設定 
        ;（BIOS コール の 呼び出し に 適し た 形 に 変換）
        ;--------------------------------------- 
        mov     ch, [si + drive.cyln + 0] ; CH = シリンダ 番号（ 下位 バイト） 
        mov     cl, [si + drive.cyln + 1] ; CL = シリンダ 番号（ 上位 バイト） 
        shl     cl, 6                     ; CL <<= 6; // 最上位 2 ビット に シフト 
        or      cl, [si + drive.sect]     ; CL |= セクタ 番号; 

        ;--------------------------------------- 
        ; セクタ 読み込み 
        ;--------------------------------------- 
        mov     dh, [si + drive.head]       ; DH = ヘッド 番号; 
        mov     dl, [si + 0]                ; DL = ドライブ 番号; 
        mov     ax, 0x0000                  ; AX = 0 x 0000; 
        mov     es, ax                      ; ES = セグメント 
        mov     bx, [bp + 8]                ; BX = コピー 先; 
.10L:                                    ; do ; { 
        mov     ah, 0x02                    ; AH = セクタ 読み込み 
        mov     al, [bp + 6]                ; AL = セクタ 数 
                                        ; 
        int     0x13                        ; CF = BIOS( 0 x 13, 0 x 02); 
        jnc     .11E                        ; if (CF)
                                        ; { 
        mov     al, 0                       ; AL = 0; 
        jmp     .10E                        ; break; 
.11E:                                   ; } 
                                        ; 
        cmp     al, 0                       ; if (読み込ん だ セクタ が あれ ば) 
        jne     .10E                        ; break; 
                                        ; 
        mov     ax, 0                       ; ret = 0; // 戻り値 を 設定 
        dec     word [bp - 2]           ; } 
        jnz     .10L                        ; while (--retry); 
.10E:   mov     ah, 0                  ; AH = 0; // ステータス 情報 は 破棄 
        ;--------------------------------------- 
        ; 【レジスタ の 復帰】 
        ;--------------------------------------- 
        pop     si 
        pop     es 
        pop     dx 
        pop     cx
        pop     bx                              
        ;--------------------------------------- 
        ; 【スタック フレーム の 破棄】 
        ;--------------------------------------- 
        mov     sp, bp 
        pop     bp 
        ret

