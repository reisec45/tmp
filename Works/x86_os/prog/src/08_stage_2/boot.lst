     1                                          BOOT_LOAD       equ     0x7c00  ;load position of boot program
     2                                          
     3                                          ORG     BOOT_LOAD       ;load address
     4                                  
     5                                  ;************************************************
     6                                  ;macro
     7                                  ;************************************************
     8                                  
     9                                  %include        "../include/macro.s"
     1                              <1> %macro cdecl 1-*.nolist 
     2                              <1>         
     3                              <1>         %rep %0 - 1 
     4                              <1>           push  %{-1:-1} 
     5                              <1>           %rotate -1 
     6                              <1>         %endrep 
     7                              <1>         
     8                              <1>         %rotate -1 
     9                              <1>           
    10                              <1>           call  %1 
    11                              <1>         
    12                              <1>         %if 1 < %0 
    13                              <1>           add   sp, (__BITS__ >> 3) * (%0 - 1) 
    14                              <1>         %endif 
    15                              <1> %endmacro
    16                              <1> 
    10                                  
    11                                  ;************************************************
    12                                  ;entry point
    13                                  ;************************************************
    14                                  
    15                                  entry:
    16                                          ;----------------------------------------
    17                                          ;BPB
    18                                          ;----------------------------------------
    19 00000000 EB58                            jmp     ipl
    20 00000002 90<rept>                        times   90-($-$$) db 0x90
    21                                  
    22                                          ;----------------------------------------
    23                                          ;IPL
    24                                          ;----------------------------------------
    25                                  
    26                                  
    27                                  ipl:
    28 0000005A FA                              cli     ;deny interrupt
    29                                  
    30                                  
    31 0000005B B80000                          mov     ax, 0x0000
    32 0000005E 8ED8                            mov     ds, ax
    33 00000060 8EC0                            mov     es, ax
    34 00000062 8ED0                            mov     ss, ax
    35 00000064 BC007C                          mov     sp, BOOT_LOAD
    36                                  
    37 00000067 FB                              sti                     ;allow interrupt
    38                                          
    39 00000068 8816[B800]                      mov     [BOOT.DRIVE], dl ;save boot drive
    40                                  
    41                                          ;------------------------------------
    42                                          ;print char
    43                                          ;------------------------------------
    44 0000006C 68[9800]E8480083C4-             cdecl   puts, .s0       ;puts(.s0)
    44 00000074 02                 
    45                                  
    46                                          ;------------------------------------
    47                                          ;read next 512 byte
    48                                          ;------------------------------------
    49 00000075 B402                            mov     ah, 0x02                ;AH = read command
    50 00000077 B001                            mov     al, 1                   ;AL = number of read sector
    51 00000079 B90200                          mov     cx, 0x0002              ;CX = silinda/sector
    52 0000007C B600                            mov     dh, 0x00                ;DH = position of head
    53 0000007E 8A16[B800]                      mov     dl, [BOOT.DRIVE]        ;DL = number of drive
    54 00000082 BB007E                          mov     bx, 0x7C00 + 512        ;BX = offset
    55 00000085 CD13                            int     0x13                    ;if(CF = BIOS(0x13, 0x02))
    56 00000087 730C                    .10Q:   jnc     .10E                    ;{
    57 00000089 68[A600]E82B0083C4-     .10T:   cdecl   puts, .e0               ;{puts(.e0);
    57 00000091 02                 
    58 00000092 E84400                          call    reboot                  ;reboot()
    59                                  .10E:                                   ;}
    60                                  
    61                                          ;------------------------------------
    62                                          ;move stage2
    63                                          ;------------------------------------
    64                                  
    65 00000095 E96801                          jmp     stage_2                 ;boot stage2
    66                                  
    67                                          ;------------------------------------
    68                                          ;data
    69                                          ;------------------------------------
    70 00000098 426F6F74696E672E2E-     .s0     db "Booting....", 0x0A, 0x0D, 0
    70 000000A1 2E2E0A0D00         
    71 000000A6 4572726F723A736563-     .e0     db "Error:sector read", 0
    71 000000AF 746F72207265616400 
    72                                  
    73                                  ALIGN 2, db 0
    74                                  BOOT:                   ;information of boot drive
    75                                  
    76                                  .DRIVE: 
    77 000000B8 0000                            dw 0            ;number of drive
    78                                  
    79                                  ;************************************************
    80                                  ;modules
    81                                  ;************************************************
    82                                  
    83                                  %include        "../modules/real/puts.s"
     1                              <1> puts:
     2                              <1> 
     3                              <1>         ;--------------------------------
     4                              <1>         ;create stack frame
     5                              <1>         ;--------------------------------
     6                              <1> 
     7                              <1>         ;push strings address   BP +4|
     8                              <1>         ;push return address       +2| IP
     9 000000BA 55                  <1>         push    bp                 ;+0| BP
    10 000000BB 89E5                <1>         mov     bp, sp
    11                              <1> 
    12                              <1> 
    13                              <1>         ;--------------------------------
    14                              <1>         ;save register
    15                              <1>         ;--------------------------------
    16 000000BD 50                  <1>         push    ax
    17 000000BE 53                  <1>         push    bx
    18 000000BF 56                  <1>         push    si
    19                              <1> 
    20                              <1>         ;--------------------------------
    21                              <1>         ;get parameter
    22                              <1>         ;--------------------------------
    23 000000C0 8B7604              <1>         mov     si, [bp + 4]
    24                              <1> 
    25                              <1>         ;--------------------------------
    26                              <1>         ;start 
    27                              <1>         ;--------------------------------
    28 000000C3 B40E                <1>         mov     ah, 0x0E        ;tele type output
    29 000000C5 BB0000              <1>         mov     bx, 0x0000      ;set 0 to page number and color of char
    30 000000C8 FC                  <1>         cld                     ;DF = 0;address++
    31                              <1> .10L:                           ;do
    32                              <1>                                 ;{
    33 000000C9 AC                  <1>         lodsb                   ;  AL = *SI++;
    34                              <1> 
    35 000000CA 3C00                <1>         cmp     al, 0           ;  if(0 == AL)
    36 000000CC 7404                <1>         je      .10E            ;  break;
    37                              <1> 
    38 000000CE CD10                <1>         int     0x10            ;int10(0x0E, AL); video BIOS call
    39 000000D0 EBF7                <1>         jmp     .10L
    40                              <1> .10E:                            ;}while(1);
    41                              <1> 
    42                              <1>         ;--------------------------------
    43                              <1>         ;return register
    44                              <1>         ;--------------------------------
    45 000000D2 5E                  <1>         pop     si
    46 000000D3 5B                  <1>         pop     bx
    47 000000D4 58                  <1>         pop     ax
    48                              <1> 
    49                              <1>         ;--------------------------------
    50                              <1>         ;delete stack frame
    51                              <1>         ;--------------------------------
    52 000000D5 89EC                <1>         mov     sp, bp
    53 000000D7 5D                  <1>         pop     bp
    54                              <1>         
    55 000000D8 C3                  <1>         ret
    56                              <1> 
    84                                  %include        "../modules/real/reboot.s"
     1                              <1> reboot:
     2                              <1> 
     3                              <1>         ;---------------------------------
     4                              <1>         ;print message
     5                              <1>         ;---------------------------------
     6 000000D9 68[F500]E8DBFF83C4- <1>         cdecl   puts, .s0               ;print message of reboot
     6 000000E1 02                  <1>
     7                              <1> 
     8                              <1> 
     9                              <1>         ;---------------------------------
    10                              <1>         ;waiting for key input
    11                              <1>         ;---------------------------------
    12                              <1> .10L:                                   ;do
    13                              <1>                                         ;{
    14 000000E2 B410                <1>         mov     ah, 0x10                ;//waiting for key input
    15 000000E4 CD16                <1>         int     0x16                    ;AL = BIOS(0x16,0x10);
    16                              <1> 
    17 000000E6 3C20                <1>         cmp     al,' '                  ;ZF = AL =='';
    18 000000E8 75F8                <1>         jne     .10L                    ;}while(!ZF);
    19                              <1> 
    20                              <1>         ;---------------------------------
    21                              <1>         ;output '\n'
    22                              <1>         ;---------------------------------
    23 000000EA 68[1301]E8CAFF83C4- <1>         cdecl   puts, .s1               ;'\n'
    23 000000F2 02                  <1>
    24                              <1> 
    25                              <1>         ;---------------------------------
    26                              <1>         ;reboot
    27                              <1>         ;---------------------------------
    28 000000F3 CD19                <1>         int     0x19                    ;BIOS(0x19);    //reboot();
    29                              <1> 
    30                              <1>         ;---------------------------------
    31                              <1>         ;data of strings
    32                              <1>         ;---------------------------------
    33 000000F5 0A0D50757368205350- <1> .s0     db      0x0A, 0x0D, "Push SPACE key to reboot...", 0
    33 000000FE 414345206B65792074- <1>
    33 00000107 6F207265626F6F742E- <1>
    33 00000110 2E2E00              <1>
    34 00000113 0A0D0A0D00          <1> .s1     db      0x0A, 0x0D, 0x0A,0x0D,0
    85                                  
    86                                  ;************************************************
    87                                  ; boot flag
    88                                  ;************************************************
    89                                  
    90 00000118 00<rept>                        times   510-($-$$) db 0x00
    91 000001FE 55AA                            db      0x55, 0xAA
    92                                  
    93                                  ;************************************************
    94                                  ;boot stage2
    95                                  ;************************************************
    96                                  stage_2:
    97                                          ;-----------------------------------
    98                                          ;print strings
    99                                          ;-----------------------------------
   100 00000200 68[0B02]E8B4FE83C4-             cdecl   puts, .s0
   100 00000208 02                 
   101                                  
   102                                          ;-----------------------------------
   103                                          ;finish
   104                                          ;-----------------------------------
   105 00000209 EBFE                            jmp     $                       ;while(1)
   106                                  
   107                                          ;-----------------------------------
   108                                          ;data
   109                                          ;-----------------------------------
   110 0000020B 326E64207374616765-     .s0     db "2nd stage...", 0x0A, 0x0D, 0
   110 00000214 2E2E2E0A0D00       
   111                                  
   112                                  ;************************************************
   113                                  ;pating 8Kbite
   114                                  ;************************************************
   115 0000021A 00<rept>                        times   (1024 * 8) - ($ - $$) db 0      ;8Kbyte
   116                                  
