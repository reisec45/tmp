     1                                  ;***********************************************************
     2                                  ;  マクロ
     3                                  ;***********************************************************
     4                                  %include "../include/define.s"
     1                              <1>         BOOT_LOAD       equ     0x7c00  ;boot position of boot program
     2                              <1> 
     3                              <1>         BOOT_SIZE       equ     (1024 * 8)      ;boot size
     4                              <1>         SECT_SIZE       equ     (512)           ;sector size
     5                              <1>         BOOT_SECT       equ     (BOOT_SIZE / SECT_SIZE) ;number of sector of boot program
     6                              <1>         
     7                              <1>         E820_RECORD_SIZE        equ     20
     5                                  %include "../include/macro.s"
     1                              <1> %macro cdecl 1-*.nolist 
     2                              <1>         
     3                              <1>         %rep %0 - 1 
     4                              <1>           push  %{-1:-1} 
     5                              <1>           %rotate -1 
     6                              <1>         %endrep 
     7                              <1>         
     8                              <1>         %rotate -1 
     9                              <1>           
    10                              <1>           call  %1 
    11                              <1>         
    12                              <1>         %if 1 < %0 
    13                              <1>           add   sp, (__BITS__ >> 3) * (%0 - 1) 
    14                              <1>         %endif 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> struc drive
    18 00000000 <res 00000002>      <1>         .no     resw 1          ;number of drive
    19 00000002 <res 00000002>      <1>         .cyln   resw 1          ;silinda
    20 00000004 <res 00000002>      <1>         .head   resw 1          ;head
    21 00000006 <res 00000002>      <1>         .sect   resw 1          ;sector
    22                              <1> endstruc
     6                                  
     7                                          ORG BOOT_LOAD
     8                                  
     9                                  ;***********************************************************
    10                                  ;  エントリポイント
    11                                  ;***********************************************************
    12                                  entry:
    13                                          ;------------------------------------------
    14                                          ; BPB(BIOS Parameter Block)
    15                                          ;------------------------------------------
    16 00000000 EB58                            jmp ipl
    17 00000002 90<rept>                        times 90 - ($ - $$) db 0x90
    18                                  
    19                                          ;------------------------------------------
    20                                          ; IPL(Initial Program Loader)
    21                                          ;------------------------------------------
    22                                  ipl:
    23 0000005A FA                              cli
    24                                  
    25 0000005B B80000                          mov ax, 0x0000
    26 0000005E 8ED8                            mov ds, ax
    27 00000060 8EC0                            mov es, ax
    28 00000062 8ED0                            mov ss, ax
    29 00000064 BC007C                          mov sp, BOOT_LOAD
    30                                  
    31 00000067 FB                              sti
    32                                  
    33 00000068 8816[B800]                      mov [BOOT + drive.no], dl
    34                                  
    35                                          ;------------------------------------------
    36                                          ; 文字列を表示
    37                                          ;------------------------------------------
    38 0000006C 68[9900]E84E0083C4-             cdecl puts, .s0
    38 00000074 02                 
    39                                  
    40                                          ;------------------------------------------
    41                                          ; 残りのセクタをすべて読み込む
    42                                          ;------------------------------------------
    43 00000075 BB0F00                          mov bx, BOOT_SECT - 1
    44 00000078 B9007E                          mov cx, BOOT_LOAD + SECT_SIZE
    45                                  
    46 0000007B 515368[B800]E89B00-             cdecl read_chs, BOOT, bx, cx
    46 00000083 83C406             
    47                                  
    48 00000086 39D8                            cmp ax, bx
    49                                  .10Q:
    50 00000088 740C                            jz .10E
    51                                  .10T:
    52 0000008A 68[A600]E8300083C4-             cdecl puts, .e0
    52 00000092 02                 
    53 00000093 E84900                          call reboot
    54                                  .10E:
    55                                  
    56                                          ;------------------------------------------
    57                                          ; 次のステージへ移行
    58                                          ;------------------------------------------
    59 00000096 E90205                          jmp stage_2
    60                                  
    61                                          ;------------------------------------------
    62                                          ; データ
    63                                          ;------------------------------------------
    64 00000099 426F6F74696E672E2E-     .s0     db "Booting...", 0x0A, 0x0D, 0
    64 000000A2 2E0A0D00           
    65 000000A6 4572726F723A736563-     .e0     db "Error:sector read", 0
    65 000000AF 746F72207265616400 
    66                                  
    67                                  ;***********************************************************
    68                                  ;  ブートドライブに関する情報
    69                                  ;***********************************************************
    70                                  ALIGN 2, db 0
    71                                  BOOT:
    72                                          istruc drive
    73 000000B8 0000                                at drive.no, dw 0
    74 000000BA 0000                                at drive.cyln, dw 0
    75 000000BC 0000                                at drive.head, dw 0
    76 000000BE 0200                                at drive.sect, dw 2
    77                                          iend
    78                                  
    79                                  ;***********************************************************
    80                                  ;  モジュール
    81                                  ;***********************************************************
    82                                  %include "../modules/real/puts.s"
     1                              <1> puts:
     2                              <1> 
     3                              <1>         ;--------------------------------
     4                              <1>         ;create stack frame
     5                              <1>         ;--------------------------------
     6                              <1> 
     7                              <1>         ;push strings address   BP +4|
     8                              <1>         ;push return address       +2| IP
     9 000000C0 55                  <1>         push    bp                 ;+0| BP
    10 000000C1 89E5                <1>         mov     bp, sp
    11                              <1> 
    12                              <1> 
    13                              <1>         ;--------------------------------
    14                              <1>         ;save register
    15                              <1>         ;--------------------------------
    16 000000C3 50                  <1>         push    ax
    17 000000C4 53                  <1>         push    bx
    18 000000C5 56                  <1>         push    si
    19                              <1> 
    20                              <1>         ;--------------------------------
    21                              <1>         ;get parameter
    22                              <1>         ;--------------------------------
    23 000000C6 8B7604              <1>         mov     si, [bp + 4]
    24                              <1> 
    25                              <1>         ;--------------------------------
    26                              <1>         ;start 
    27                              <1>         ;--------------------------------
    28 000000C9 B40E                <1>         mov     ah, 0x0E        ;tele type output
    29 000000CB BB0000              <1>         mov     bx, 0x0000      ;set 0 to page number and color of char
    30 000000CE FC                  <1>         cld                     ;DF = 0;address++
    31                              <1> .10L:                           ;do
    32                              <1>                                 ;{
    33 000000CF AC                  <1>         lodsb                   ;  AL = *SI++;
    34                              <1> 
    35 000000D0 3C00                <1>         cmp     al, 0           ;  if(0 == AL)
    36 000000D2 7404                <1>         je      .10E            ;  break;
    37                              <1> 
    38 000000D4 CD10                <1>         int     0x10            ;int10(0x0E, AL); video BIOS call
    39 000000D6 EBF7                <1>         jmp     .10L
    40                              <1> .10E:                            ;}while(1);
    41                              <1> 
    42                              <1>         ;--------------------------------
    43                              <1>         ;return register
    44                              <1>         ;--------------------------------
    45 000000D8 5E                  <1>         pop     si
    46 000000D9 5B                  <1>         pop     bx
    47 000000DA 58                  <1>         pop     ax
    48                              <1> 
    49                              <1>         ;--------------------------------
    50                              <1>         ;delete stack frame
    51                              <1>         ;--------------------------------
    52 000000DB 89EC                <1>         mov     sp, bp
    53 000000DD 5D                  <1>         pop     bp
    54                              <1>         
    55 000000DE C3                  <1>         ret
    56                              <1> 
    83                                  %include "../modules/real/reboot.s"
     1                              <1> reboot:
     2                              <1> 
     3                              <1>         ;---------------------------------
     4                              <1>         ;print message
     5                              <1>         ;---------------------------------
     6 000000DF 68[FB00]E8DBFF83C4- <1>         cdecl   puts, .s0               ;print message of reboot
     6 000000E7 02                  <1>
     7                              <1> 
     8                              <1> 
     9                              <1>         ;---------------------------------
    10                              <1>         ;waiting for key input
    11                              <1>         ;---------------------------------
    12                              <1> .10L:                                   ;do
    13                              <1>                                         ;{
    14 000000E8 B410                <1>         mov     ah, 0x10                ;//waiting for key input
    15 000000EA CD16                <1>         int     0x16                    ;AL = BIOS(0x16,0x10);
    16                              <1> 
    17 000000EC 3C20                <1>         cmp     al,' '                  ;ZF = AL =='';
    18 000000EE 75F8                <1>         jne     .10L                    ;}while(!ZF);
    19                              <1> 
    20                              <1>         ;---------------------------------
    21                              <1>         ;output '\n'
    22                              <1>         ;---------------------------------
    23 000000F0 68[1901]E8CAFF83C4- <1>         cdecl   puts, .s1               ;'\n'
    23 000000F8 02                  <1>
    24                              <1> 
    25                              <1>         ;---------------------------------
    26                              <1>         ;reboot
    27                              <1>         ;---------------------------------
    28 000000F9 CD19                <1>         int     0x19                    ;BIOS(0x19);    //reboot();
    29                              <1> 
    30                              <1>         ;---------------------------------
    31                              <1>         ;data of strings
    32                              <1>         ;---------------------------------
    33 000000FB 0A0D50757368205350- <1> .s0     db      0x0A, 0x0D, "Push SPACE key to reboot...", 0
    33 00000104 414345206B65792074- <1>
    33 0000010D 6F207265626F6F742E- <1>
    33 00000116 2E2E00              <1>
    34 00000119 0A0D0A0D00          <1> .s1     db      0x0A, 0x0D, 0x0A,0x0D,0
    84                                  %include "../modules/real/read_chs.s"
     1                              <1> read_chs:
     2                              <1>         ;--------------------------------------- 
     3                              <1>         ; 【スタック フレーム の 構築】 
     4                              <1>         ;--------------------------------------- 
     5                              <1>                                         ; + 8 | コピー 先 
     6                              <1>                                         ; + 6 | セクタ 数 
     7                              <1>                                         ; + 4 | パラメータ バッファ 
     8                              <1>                                         ; ------+---------------- 
     9                              <1>                                         ; + 2 | IP（ 戻り 番地） 
    10 0000011E 55                  <1>         push    bp                      ; BP + 0 | BP（ 元 の 値）
    11 0000011F 89E5                <1>         mov     bp, sp                  ; ------+-------- 
    12 00000121 6A03                <1>         push    3                       ; - 2 | retry = 3; // リトライ 回数 
    13 00000123 6A00                <1>         push    0                       ; - 4 | sect = 0; // 読み込み セクタ 数 
    14                              <1> 
    15                              <1>         
    16                              <1>         ;--------------------------------------- 
    17                              <1>         ; 【レジスタ の 保存】 
    18                              <1>         ;--------------------------------------- 
    19 00000125 53                  <1>         push    bx 
    20 00000126 51                  <1>         push    cx 
    21 00000127 52                  <1>         push    dx 
    22 00000128 06                  <1>         push    es 
    23 00000129 56                  <1>         push    si 
    24                              <1> 
    25                              <1>         ;--------------------------------------- 
    26                              <1>         ; 【処理 の 開始】 
    27                              <1>         ;--------------------------------------- 
    28 0000012A 8B7604              <1>         mov     si, [bp + 4] ; SI = SRC バッファ; 
    29                              <1> 
    30                              <1>         ;--------------------------------------- 
    31                              <1>         ; CX レジスタ の 設定 
    32                              <1>         ;（BIOS コール の 呼び出し に 適し た 形 に 変換）
    33                              <1>         ;--------------------------------------- 
    34 0000012D 8A6C02              <1>         mov     ch, [si + drive.cyln + 0] ; CH = シリンダ 番号（ 下位 バイト） 
    35 00000130 8A4C03              <1>         mov     cl, [si + drive.cyln + 1] ; CL = シリンダ 番号（ 上位 バイト） 
    36 00000133 C0E106              <1>         shl     cl, 6                     ; CL <<= 6; // 最上位 2 ビット に シフト 
    37 00000136 0A4C06              <1>         or      cl, [si + drive.sect]     ; CL |= セクタ 番号; 
    38                              <1> 
    39                              <1>         ;--------------------------------------- 
    40                              <1>         ; セクタ 読み込み 
    41                              <1>         ;--------------------------------------- 
    42 00000139 8A7404              <1>         mov     dh, [si + drive.head]       ; DH = ヘッド 番号; 
    43 0000013C 8A14                <1>         mov     dl, [si + 0]                ; DL = ドライブ 番号; 
    44 0000013E B80000              <1>         mov     ax, 0x0000                  ; AX = 0 x 0000; 
    45 00000141 8EC0                <1>         mov     es, ax                      ; ES = セグメント 
    46 00000143 8B5E08              <1>         mov     bx, [bp + 8]                ; BX = コピー 先; 
    47                              <1> .10L:                                    ; do ; { 
    48 00000146 B402                <1>         mov     ah, 0x02                    ; AH = セクタ 読み込み 
    49 00000148 8A4606              <1>         mov     al, [bp + 6]                ; AL = セクタ 数 
    50                              <1>                                         ; 
    51 0000014B CD13                <1>         int     0x13                        ; CF = BIOS( 0 x 13, 0 x 02); 
    52 0000014D 7304                <1>         jnc     .11E                        ; if (CF)
    53                              <1>                                         ; { 
    54 0000014F B000                <1>         mov     al, 0                       ; AL = 0; 
    55 00000151 EB0C                <1>         jmp     .10E                        ; break; 
    56                              <1> .11E:                                   ; } 
    57                              <1>                                         ; 
    58 00000153 3C00                <1>         cmp     al, 0                       ; if (読み込ん だ セクタ が あれ ば) 
    59 00000155 7508                <1>         jne     .10E                        ; break; 
    60                              <1>                                         ; 
    61 00000157 B80000              <1>         mov     ax, 0                       ; ret = 0; // 戻り値 を 設定 
    62 0000015A FF4EFE              <1>         dec     word [bp - 2]           ; } 
    63 0000015D 75E7                <1>         jnz     .10L                        ; while (--retry); 
    64 0000015F B400                <1> .10E:   mov     ah, 0                  ; AH = 0; // ステータス 情報 は 破棄 
    65                              <1>         ;--------------------------------------- 
    66                              <1>         ; 【レジスタ の 復帰】 
    67                              <1>         ;--------------------------------------- 
    68 00000161 5E                  <1>         pop     si 
    69 00000162 07                  <1>         pop     es 
    70 00000163 5A                  <1>         pop     dx 
    71 00000164 59                  <1>         pop     cx
    72 00000165 5B                  <1>         pop     bx                              
    73                              <1>         ;--------------------------------------- 
    74                              <1>         ; 【スタック フレーム の 破棄】 
    75                              <1>         ;--------------------------------------- 
    76 00000166 89EC                <1>         mov     sp, bp 
    77 00000168 5D                  <1>         pop     bp 
    78 00000169 C3                  <1>         ret
    79                              <1> 
    85                                  
    86                                  ;***********************************************************
    87                                  ;  ブートフラグ(先頭512バイトの終了)
    88                                  ;***********************************************************
    89 0000016A 00<rept>                        times 510 - ($ - $$) db 0x00
    90 000001FE 55AA                            db 0x55, 0xAA
    91                                  
    92                                  ;***********************************************************
    93                                  ;  リアルモード時に取得した情報
    94                                  ;***********************************************************
    95                                  FONT:
    96 00000200 0000                    .seg:   dw 0
    97 00000202 0000                    .off:   dw 0
    98                                  ACPI_DATA:
    99 00000204 00000000                .adr:   dd 0
   100 00000208 00000000                .len:   dd 0
   101                                  
   102                                  ;***********************************************************
   103                                  ;  モジュール(先頭512バイト以降に配置)
   104                                  ;***********************************************************
   105                                  %include "../modules/real/itoa.s"
     1                              <1> itoa: 
     2                              <1> 
     3                              <1>         ;--------------------------------------- 
     4                              <1>         ; 【スタック フレーム の 構築】 
     5                              <1>         ;--------------------------------------- 
     6                              <1>                         ; + 12 | フラグ 
     7                              <1>                         ; + 10 | 基数 
     8                              <1>                         ; + 8 | バッファ サイズ 
     9                              <1>                         ; + 6 | バッファ アドレス 
    10                              <1>                         ; + 4 | 数値 ; + 2 | IP（ 戻り 番地） 
    11 0000020C 55                  <1>         push    bp      ; BP + 0 | BP（ 元 の 値） 
    12 0000020D 89E5                <1>         mov     bp, sp  ; ------+-------- 
    13                              <1>         
    14                              <1> 
    15                              <1>         ;--------------------------------------- 
    16                              <1>         ; 【レジスタ の 保存】 
    17                              <1>         ;---------------------------------------
    18                              <1>         
    19 0000020F 50                  <1>         push    ax
    20 00000210 53                  <1>         push    bx
    21 00000211 51                  <1>         push    cx
    22 00000212 52                  <1>         push    dx
    23 00000213 56                  <1>         push    si
    24 00000214 57                  <1>         push    di
    25                              <1> 
    26                              <1>         ;---------------------------------------
    27                              <1>         ;get parameters
    28                              <1>         ;---------------------------------------
    29                              <1>         
    30 00000215 8B4604              <1>         mov     ax, [bp + 4]    ;val = num
    31 00000218 8B7606              <1>         mov     si, [bp + 6]    ;dst = address of buffer
    32 0000021B 8B4E08              <1>         mov     cx, [bp + 8]    ;size = left size of buffer
    33                              <1> 
    34 0000021E 89F7                <1>         mov     di, si          ;buffer 最後尾
    35 00000220 01CF                <1>         add     di, cx          ;dst = &dst[size -1]
    36 00000222 4F                  <1>         dec     di
    37                              <1>         
    38 00000223 8B5E0C              <1>         mov     bx, word [bp + 12]      ;flag
    39                              <1> 
    40                              <1> 
    41                              <1>         ;---------------------------------------
    42                              <1>         ;符号付き判定
    43                              <1>         ;---------------------------------------
    44                              <1> 
    45 00000226 F7C30100            <1>         test    bx, 0b0001      ;if (flag & 0x01)
    46                              <1> .10Q:   
    47 0000022A 7408                <1>         je      .10E            ;{
    48 0000022C 83F800              <1>         cmp     ax, 0           ;if (val < 0)
    49                              <1> .12Q:
    50 0000022F 7D03                <1>         jge     .12E            ;  {
    51 00000231 83CB02              <1>         or      bx, 0b0010      ;    flag |= 2
    52                              <1> .12E:                           ;  }
    53                              <1> .10E:                           ;}
    54                              <1> 
    55                              <1> 
    56                              <1>         ;---------------------------------------
    57                              <1>         ;符号出力判定
    58                              <1>         ;---------------------------------------
    59 00000234 F7C30200            <1>         test    bx, 0b0010      ;if(flag & 0x02)
    60                              <1> .20Q:   
    61 00000238 7410                <1>         je      .20E            ;{
    62 0000023A 83F800              <1>         cmp     ax, 0           ;if (val < 0)
    63                              <1> .22Q:   
    64 0000023D 7D07                <1>         jge     .22F            ;  {
    65 0000023F F7D8                <1>         neg     ax              ;    val *= -1
    66 00000241 C6042D              <1>         mov     [si], byte '-'  ;    *dst = '-'
    67 00000244 EB03                <1>         jmp     .22E            ;  }
    68                              <1> .22F:                           ;else
    69                              <1>                                 ;  {
    70 00000246 C6042B              <1>         mov     [si],byte '+'   ;    *dst= '+'
    71                              <1> .22E:                           ;  }
    72 00000249 49                  <1>         dec     cx              ;size--;
    73                              <1> .20E:                           ;}
    74                              <1> 
    75                              <1> 
    76                              <1>         ;---------------------------------------
    77                              <1>         ;translate to ASCII
    78                              <1>         ;---------------------------------------
    79 0000024A 8B5E0A              <1>         mov     bx, [bp + 10]   ;BX = 基数
    80                              <1> .30L:                           ;do
    81                              <1>                                 ;{
    82 0000024D BA0000              <1>         mov     dx, 0
    83 00000250 F7F3                <1>         div     bx              ;DX = DX:AX % 基数
    84                              <1>                                 ;AX = DX:AX / 基数
    85                              <1> 
    86 00000252 89D6                <1>         mov     si, dx          ;table
    87 00000254 8A94[7C02]          <1>         mov     dl, byte [.ascii + si]  ;DL = ASCII[DX]
    88                              <1> 
    89 00000258 8815                <1>         mov     [di], dl                ;*dst = DL;
    90 0000025A 4F                  <1>         dec     di                      ;dst--
    91 0000025B 83F800              <1>         cmp     ax, 0
    92 0000025E E0ED                <1>         loopnz  .30L                    ;}while(AX)
    93                              <1> .30E:
    94                              <1> 
    95                              <1>         ;--------------------------------------- 
    96                              <1>         ; 空欄 を 埋める 
    97                              <1>         ;--------------------------------------- 
    98 00000260 83F900              <1>         cmp     cx, 0                   ; if (size) 
    99                              <1> .40Q: 
   100 00000263 740D                <1>         je      .40E                   ; { 
   101 00000265 B020                <1>         mov     al, ' '                 ; AL = ' '; // ' 'で 埋める（ デフォルト 値） 
   102 00000267 837E0C04            <1>         cmp     [bp + 12], word 0b0100  ; if (flags & 0 x 04) 
   103                              <1> .42Q: 
   104 0000026B 7502                <1>         jne     .42E                   ; { 
   105 0000026D B030                <1>         mov     al, '0'                 ;   AL = '0'; // '0' で 埋める 
   106                              <1> .42E:                                  ; } 
   107 0000026F FD                  <1>         std                             ;   // DF = 1（- 方向） 
   108 00000270 F3AA                <1>         rep     stosb                   ;   while (--CX) *DI-- = ' '; 
   109                              <1> .40E:                                  ; }
   110                              <1> 
   111                              <1> 
   112                              <1>         ;--------------------------------------- 
   113                              <1>         ;return register
   114                              <1>         ;--------------------------------------- 
   115                              <1> 
   116 00000272 5F                  <1>         pop     di 
   117 00000273 5E                  <1>         pop     si 
   118 00000274 5A                  <1>         pop     dx 
   119 00000275 59                  <1>         pop     cx 
   120 00000276 5B                  <1>         pop     bx 
   121 00000277 58                  <1>         pop     ax 
   122                              <1> 
   123                              <1>         ;--------------------------------------- 
   124                              <1>         ; 【スタック フレーム の 破棄】 
   125                              <1>         ;--------------------------------------- 
   126 00000278 89EC                <1>         mov     sp, bp 
   127 0000027A 5D                  <1>         pop     bp 
   128 0000027B C3                  <1>         ret 
   129                              <1> 
   130 0000027C 303132333435363738- <1> .ascii  db      "0123456789ABCDEF"      ; 変換 テーブル
   130 00000285 39414243444546      <1>
   131                              <1> 
   106                                  %include "../modules/real/get_drive_param.s"
     1                              <1> get_drive_param:
     2                              <1>         ;--------------------------------------- 
     3                              <1>         ; 【スタック フレーム の 構築】 
     4                              <1>         ;--------------------------------------- 
     5                              <1>                                         ; + 4 | パラメータ バッファ 
     6                              <1>                                         ; ------+---------------- 
     7                              <1>                                         ; + 2 | IP（ 戻り 番地） 
     8 0000028C 55                  <1>         push    bp                      ; BP + 0 | BP（ 元 の 値）
     9 0000028D 89E5                <1>         mov     bp, sp                  ; ------+-------- 
    10                              <1> 
    11                              <1>         
    12                              <1>         ;--------------------------------------- 
    13                              <1>         ; 【レジスタ の 保存】 
    14                              <1>         ;--------------------------------------- 
    15 0000028F 53                  <1>         push    bx 
    16 00000290 51                  <1>         push    cx 
    17 00000291 06                  <1>         push    es 
    18 00000292 56                  <1>         push    si 
    19 00000293 57                  <1>         push    di 
    20                              <1> 
    21                              <1>         ;--------------------------------------- 
    22                              <1>         ; 【処理 の 開始】 
    23                              <1>         ;--------------------------------------- 
    24 00000294 8B7604              <1>         mov     si, [bp + 4] ; SI = SRC バッファ; 
    25                              <1> 
    26 00000297 B80000              <1>         mov     ax, 0                   ; Disk Base Table Pointer の 初期化 
    27 0000029A 8EC0                <1>         mov     es, ax                  ; ES = 0; 
    28 0000029C 89C7                <1>         mov     di, ax                  ; DI = 0; 
    29                              <1>         
    30 0000029E B408                <1>         mov     ah, 8                   ; // get drive parameters 
    31 000002A0 8A14                <1>         mov     dl, [si + drive.no]     ; DL = ドライブ 番号
    32 000002A2 CD13                <1>         int     0x13                    ; CF = BIOS( 0 x 13, 8); 
    33                              <1> .10Q:   
    34 000002A4 721B                <1>         jc      .10F                    ; if (0 == CF) //Failed
    35                              <1> 
    36                              <1> .10T:                                   ; { 
    37 000002A6 88C8                <1>         mov     al, cl                  ; AX = セクタ 数 
    38 000002A8 83E03F              <1>         and     ax, 0x3F                ; // 下位 6 ビット のみ 有効
    39                              <1>         
    40 000002AB C0E906              <1>         shr     cl, 6                   ; CX = シリンダ 数 
    41 000002AE C1C908              <1>         ror     cx, 8                   ; 
    42 000002B1 41                  <1>         inc     cx                      ; 
    43                              <1>         
    44 000002B2 0FB6DE              <1>         movzx   bx, dh                  ; BX = ヘッド 数（ 1 ベース） 
    45 000002B5 43                  <1>         inc     bx                      ; 
    46                              <1>        
    47 000002B6 894C02              <1>         mov     [si + drive.cyln], cx   ; drive.syln = CX; // C: シリンダ 数 
    48 000002B9 895C04              <1>         mov     [si + drive.head], bx   ; drive. head = BX; // H: ヘッド 数 
    49 000002BC 894406              <1>         mov     [si + drive.sect], ax   ; drive. sect = AX; // S: セクタ 数 
    50 000002BF EB03                <1>         jmp     .10E                    ; } 
    51                              <1> .10F:                                   ; else ; { 
    52 000002C1 B80000              <1>         mov     ax, 0                   ; AX = 0; // 失敗 
    53                              <1> .10E:                                   ; }
    54                              <1> 
    55                              <1>         ;--------------------------------------- 
    56                              <1>         ; 【レジスタ の 復帰】 
    57                              <1>         ;--------------------------------------- 
    58 000002C4 5F                  <1>         pop     di 
    59 000002C5 5E                  <1>         pop     si 
    60 000002C6 07                  <1>         pop     es 
    61 000002C7 59                  <1>         pop     cx
    62 000002C8 5B                  <1>         pop     bx                              
    63                              <1>         ;--------------------------------------- 
    64                              <1>         ; 【スタック フレーム の 破棄】 
    65                              <1>         ;--------------------------------------- 
    66 000002C9 89EC                <1>         mov     sp, bp 
    67 000002CB 5D                  <1>         pop     bp 
    68 000002CC C3                  <1>         ret
    69                              <1> 
   107                                  %include "../modules/real/get_font_adr.s"
     1                              <1> get_font_adr:
     2                              <1>         ;--------------------------------------- 
     3                              <1>         ; 【スタック フレーム の 構築】 
     4                              <1>         ;--------------------------------------- 
     5                              <1>                                         ; + 4 | パラメータ バッファ 
     6                              <1>                                         ; ------+---------------- 
     7                              <1>                                         ; + 2 | IP（ 戻り 番地） 
     8 000002CD 55                  <1>         push    bp                      ; BP + 0 | BP（ 元 の 値）
     9 000002CE 89E5                <1>         mov     bp, sp                  ; ------+-------- 
    10                              <1> 
    11                              <1>         
    12                              <1>         ;--------------------------------------- 
    13                              <1>         ; 【レジスタ の 保存】 
    14                              <1>         ;--------------------------------------- 
    15 000002D0 50                  <1>         push    ax
    16 000002D1 53                  <1>         push    bx 
    17 000002D2 56                  <1>         push    si 
    18 000002D3 06                  <1>         push    es 
    19 000002D4 55                  <1>         push    bp  
    20                              <1> 
    21                              <1>         ;--------------------------------------- 
    22                              <1>         ; 引数を取得 
    23                              <1>         ;--------------------------------------- 
    24 000002D5 8B7604              <1>         mov     si, [bp + 4]            ; SI = SRC バッファ; 
    25                              <1>         ;--------------------------------------- 
    26                              <1>         ; フォントアドレスを取得 
    27                              <1>         ;--------------------------------------- 
    28 000002D8 B83011              <1>         mov     ax, 0x1130              ;get font address
    29 000002DB B706                <1>         mov     bh, 0x06                ;8x 16 font (vga/mcga)
    30 000002DD CD10                <1>         int     10h                     ;ES:BP=FONT ADDRESS
    31                              <1> 
    32                              <1>         ;--------------------------------------- 
    33                              <1>         ; フォントアドレスを保存 
    34                              <1>         ;--------------------------------------- 
    35 000002DF 8C04                <1>         mov     [si + 0], es            ; dst[0] = segment; 
    36 000002E1 896C02              <1>         mov     [si + 2], bp            ; dst[1] = offset; 
    37                              <1> 
    38                              <1>         ;--------------------------------------- 
    39                              <1>         ; 【レジスタ の 復帰】 
    40                              <1>         ;--------------------------------------- 
    41 000002E4 5D                  <1>         pop     bp 
    42 000002E5 07                  <1>         pop     es 
    43 000002E6 5E                  <1>         pop     si 
    44 000002E7 5B                  <1>         pop     bx
    45 000002E8 58                  <1>         pop     ax                              
    46                              <1>         ;--------------------------------------- 
    47                              <1>         ; 【スタック フレーム の 破棄】 
    48                              <1>         ;--------------------------------------- 
    49 000002E9 89EC                <1>         mov     sp, bp 
    50 000002EB 5D                  <1>         pop     bp 
    51 000002EC C3                  <1>         ret
    52                              <1> 
   108                                  %include "../modules/real/get_mem_info.s"
     1                              <1> get_mem_info:
     2                              <1> 
     3                              <1>         ;------------------------------------
     4                              <1>         ;save register
     5                              <1>         ;------------------------------------
     6 000002ED 6650                <1>         push    eax
     7 000002EF 6653                <1>         push    ebx
     8 000002F1 6651                <1>         push    ecx
     9 000002F3 6652                <1>         push    edx
    10 000002F5 56                  <1>         push    si
    11 000002F6 57                  <1>         push    di
    12 000002F7 55                  <1>         push    bp
    13                              <1> 
    14                              <1> ALIGN 4, db 0
    15 000002F8 00<rept>            <1> .b0:    times E820_RECORD_SIZE db 0        
    16                              <1> 
    17 0000030C 68[A003]E8AEFD83C4- <1>         cdecl   puts, .s0
    17 00000314 02                  <1>
    18                              <1>         ;メモリ情報を取得
    19 00000315 BD0000              <1>         mov     bp, 0
    20 00000318 66BB00000000        <1>         mov     ebx, 0
    21                              <1> .10L:
    22                              <1> 
    23 0000031E 66B820E80000        <1>         mov     eax, 0x0000E820
    24                              <1> 
    25 00000324 66B914000000        <1>         mov     ecx, E820_RECORD_SIZE
    26 0000032A 66BA50414D53        <1>         mov     edx, 'PAMS'
    27 00000330 BF[F802]            <1>         mov     di, .b0
    28 00000333 CD15                <1>         int     0x15
    29                              <1>         
    30                              <1>         ;コマンドに対応か？
    31 00000335 663D50414D53        <1>         cmp     eax, 'PAMS'
    32 0000033B 7402                <1>         je      .12E
    33 0000033D EB4C                <1>         jmp     .10E
    34                              <1> .12E:
    35                              <1>         ;エラーなし
    36 0000033F 7302                <1>         jnc     .14E
    37 00000341 EB48                <1>         jmp     .10E
    38                              <1> .14E:
    39                              <1>         ;1レコード分のメモリ情報を表示
    40 00000343 57E8E40083C402      <1>         cdecl   put_mem_info, di
    41                              <1> 
    42                              <1>         ;get a address of ACPI data
    43 0000034A 668B4510            <1>         mov     eax, [di + 16]
    44 0000034E 6683F803            <1>         cmp     eax, 3
    45 00000352 750F                <1>         jne     .15E
    46                              <1> 
    47 00000354 668B05              <1>         mov     eax, [di + 0]
    48 00000357 66A3[0402]          <1>         mov     [ACPI_DATA.adr], eax
    49                              <1> 
    50 0000035B 668B4508            <1>         mov     eax, [di + 8]
    51 0000035F 66A3[0802]          <1>         mov     [ACPI_DATA.len], eax
    52                              <1> .15E:
    53                              <1> 
    54 00000363 6683FB00            <1>         cmp     ebx, 0
    55 00000367 741C                <1>         jz      .16E
    56                              <1> 
    57 00000369 45                  <1>         inc     bp
    58 0000036A 83E507              <1>         and     bp, 0x07
    59 0000036D 7516                <1>         jnz     .16E
    60                              <1> 
    61 0000036F 68[1304]E84BFD83C4- <1>         cdecl   puts, .s2
    61 00000377 02                  <1>
    62                              <1> 
    63 00000378 B410                <1>         mov     ah, 0x10
    64 0000037A CD16                <1>         int     0x16
    65                              <1> 
    66 0000037C 68[1E04]E83EFD83C4- <1>         cdecl   puts, .s3
    66 00000384 02                  <1>
    67                              <1> 
    68                              <1> .16E:
    69 00000385 6683FB00            <1>         cmp     ebx, 0
    70 00000389 7593                <1>         jne     .10L
    71                              <1> 
    72                              <1> .10E:
    73 0000038B 68[E303]E82FFD83C4- <1>         cdecl   puts, .s1
    73 00000393 02                  <1>
    74                              <1>         ;-----------------------------------------
    75                              <1>         ; 【レジスタの復帰】
    76                              <1>         ;-----------------------------------------
    77 00000394 5D                  <1>         pop bp
    78 00000395 5F                  <1>         pop di
    79 00000396 5E                  <1>         pop si
    80 00000397 665A                <1>         pop edx
    81 00000399 6659                <1>         pop ecx
    82 0000039B 665B                <1>         pop ebx
    83 0000039D 6658                <1>         pop eax
    84                              <1> 
    85 0000039F C3                  <1>         ret
    86                              <1> 
    87                              <1>         ;------------------------------------------
    88                              <1>         ; データ
    89                              <1>         ;------------------------------------------
    90 000003A0 2045383230204D656D- <1> .s0:    db " E820 Memory Map:", 0x0A, 0x0D
    90 000003A9 6F7279204D61703A0A- <1>
    90 000003B2 0D                  <1>
    91 000003B3 20426173655F5F5F5F- <1>         db " Base_____________ Length___________ Type____", 0x0A, 0x0D, 0
    91 000003BC 5F5F5F5F5F5F5F5F5F- <1>
    91 000003C5 204C656E6774685F5F- <1>
    91 000003CE 5F5F5F5F5F5F5F5F5F- <1>
    91 000003D7 20547970655F5F5F5F- <1>
    91 000003E0 0A0D00              <1>
    92 000003E3 202D2D2D2D2D2D2D2D- <1> .s1:    db " ----------------- ----------------- --------", 0x0A, 0x0D, 0
    92 000003EC 2D2D2D2D2D2D2D2D2D- <1>
    92 000003F5 202D2D2D2D2D2D2D2D- <1>
    92 000003FE 2D2D2D2D2D2D2D2D2D- <1>
    92 00000407 202D2D2D2D2D2D2D2D- <1>
    92 00000410 0A0D00              <1>
    93 00000413 203C6D6F72652E2E2E- <1> .s2:    db " <more...>", 0
    93 0000041C 3E00                <1>
    94 0000041E 0D2020202020202020- <1> .s3:    db 0x0D, "          ", 0x0D, 0
    94 00000427 20200D00            <1>
    95                              <1> 
    96                              <1> put_mem_info:
    97                              <1>         ;------------------------------------
    98                              <1>         ;create stack frame
    99                              <1>         ;------------------------------------
   100                              <1>                                         ; +4 buf
   101                              <1>                                         ; +2 IP
   102 0000042B 55                  <1>         push    bp                      ;BP+0 BP
   103 0000042C 89E5                <1>         mov     bp, sp                  ;
   104                              <1>         
   105                              <1>         ;------------------------------------
   106                              <1>         ;save registers
   107                              <1>         ;------------------------------------
   108 0000042E 53                  <1>         push    bx
   109 0000042F 56                  <1>         push    si
   110                              <1>         
   111                              <1>         ;------------------------------------
   112                              <1>         ;get parameter
   113                              <1>         ;------------------------------------
   114 00000430 8B7604              <1>         mov     si, [bp + 4]
   115                              <1> 
   116                              <1>         ;-----------------------------------------
   117                              <1>         ; レコードの表示
   118                              <1>         ;-----------------------------------------
   119                              <1>         ; Base(64bit)
   120 00000433 6A046A106A0468-     <1>         cdecl itoa, word[si + 6], .p2 + 0, 4, 16, 0b0100
   120 0000043A [0A05]FF7406E8CAFD- <1>
   120 00000442 83C40A              <1>
   121 00000445 6A046A106A0468-     <1>         cdecl itoa, word[si + 4], .p2 + 4, 4, 16, 0b0100
   121 0000044C [0E05]FF7404E8B8FD- <1>
   121 00000454 83C40A              <1>
   122 00000457 6A046A106A0468-     <1>         cdecl itoa, word[si + 2], .p3 + 0, 4, 16, 0b0100
   122 0000045E [1305]FF7402E8A6FD- <1>
   122 00000466 83C40A              <1>
   123 00000469 6A046A106A0468-     <1>         cdecl itoa, word[si + 0], .p3 + 4, 4, 16, 0b0100
   123 00000470 [1705]FF34E895FD83- <1>
   123 00000478 C40A                <1>
   124                              <1> 
   125                              <1>         ; Length(64bit)
   126 0000047A 6A046A106A0468-     <1>         cdecl itoa, word[si + 14], .p4 + 0, 4, 16, 0b0100
   126 00000481 [1C05]FF740EE883FD- <1>
   126 00000489 83C40A              <1>
   127 0000048C 6A046A106A0468-     <1>         cdecl itoa, word[si + 12], .p4 + 4, 4, 16, 0b0100
   127 00000493 [2005]FF740CE871FD- <1>
   127 0000049B 83C40A              <1>
   128 0000049E 6A046A106A0468-     <1>         cdecl itoa, word[si + 10], .p5 + 0, 4, 16, 0b0100
   128 000004A5 [2505]FF740AE85FFD- <1>
   128 000004AD 83C40A              <1>
   129 000004B0 6A046A106A0468-     <1>         cdecl itoa, word[si + 8], .p5 + 4, 4, 16, 0b0100
   129 000004B7 [2905]FF7408E84DFD- <1>
   129 000004BF 83C40A              <1>
   130                              <1> 
   131                              <1>         ; Type(32bit)
   132 000004C2 6A046A106A0468-     <1>         cdecl itoa, word[si + 18], .p6 + 0, 4, 16, 0b0100
   132 000004C9 [2E05]FF7412E83BFD- <1>
   132 000004D1 83C40A              <1>
   133 000004D4 6A046A106A0468-     <1>         cdecl itoa, word[si + 16], .p6 + 4, 4, 16, 0b0100
   133 000004DB [3205]FF7410E829FD- <1>
   133 000004E3 83C40A              <1>
   134                              <1> 
   135 000004E6 68[0905]E8D4FB83C4- <1>         cdecl   puts, .s1
   135 000004EE 02                  <1>
   136                              <1>         
   137 000004EF 8B5C10              <1>         mov bx, [si + 16]
   138 000004F2 83E307              <1>         and bx, 0x07
   139 000004F5 D1E3                <1>         shl bx, 1
   140 000004F7 81C3[8B05]          <1>         add bx, .t0
   141 000004FB FF37E8C0FB83C402    <1>         cdecl puts, word[bx]
   142                              <1>         
   143                              <1>         ;-----------------------------------------
   144                              <1>         ; 【レジスタの復帰】
   145                              <1>         ;-----------------------------------------
   146 00000503 5E                  <1>         pop si
   147 00000504 5B                  <1>         pop bx
   148                              <1> 
   149                              <1>         ;-----------------------------------------
   150                              <1>         ; 【スタックフレームの破棄】
   151                              <1>         ;-----------------------------------------
   152 00000505 89EC                <1>         mov sp, bp
   153 00000507 5D                  <1>         pop bp
   154                              <1> 
   155 00000508 C3                  <1>         ret
   156                              <1> 
   157                              <1>         ;------------------------------------------
   158                              <1>         ; データ
   159                              <1>         ;------------------------------------------
   160                              <1> 
   161 00000509 20                  <1> .s1:    db " "
   162 0000050A 5A5A5A5A5A5A5A5A5F  <1> .p2:    db "ZZZZZZZZ_"
   163 00000513 5A5A5A5A5A5A5A5A20  <1> .p3:    db "ZZZZZZZZ "
   164 0000051C 5A5A5A5A5A5A5A5A5F  <1> .p4:    db "ZZZZZZZZ_"
   165 00000525 5A5A5A5A5A5A5A5A20  <1> .p5:    db "ZZZZZZZZ "
   166 0000052E 5A5A5A5A5A5A5A5A00  <1> .p6:    db "ZZZZZZZZ", 0
   167                              <1> 
   168 00000537 2028556E6B6E6F776E- <1> .s4:    db " (Unknown)", 0x0A, 0x0D, 0
   168 00000540 290A0D00            <1>
   169 00000544 2028757361626C6529- <1> .s5:    db " (usable)", 0x0A, 0x0D, 0
   169 0000054D 0A0D00              <1>
   170 00000550 202872657365727665- <1> .s6:    db " (reserved)", 0x0A, 0x0D, 0
   170 00000559 64290A0D00          <1>
   171 0000055E 202841435049206461- <1> .s7:    db " (ACPI data)", 0x0A, 0x0D, 0
   171 00000567 7461290A0D00        <1>
   172 0000056D 202841435049204E56- <1> .s8:    db " (ACPI NVS)", 0x0A, 0x0D, 0
   172 00000576 53290A0D00          <1>
   173 0000057B 2028626164206D656D- <1> .s9:    db " (bad memory)", 0x0A, 0x0D, 0
   173 00000584 6F7279290A0D00      <1>
   174                              <1> 
   175 0000058B [3705][4405][5005]- <1> .t0: dw .s4, .s5, .s6, .s7, .s8, .s9, .s4, .s4
   175 00000591 [5E05][6D05][7B05]- <1>
   175 00000597 [3705][3705]        <1>
   109                                  
   110                                  ;***********************************************************
   111                                  ;  ブート処理の第2ステージ
   112                                  ;***********************************************************
   113                                  stage_2:
   114                                          ;------------------------------------------
   115                                          ; 文字列を表示
   116                                          ;------------------------------------------
   117 0000059B 68[1506]E81FFB83C4-             cdecl puts, .s0
   117 000005A3 02                 
   118                                  
   119                                          ;------------------------------------------
   120                                          ; ドライブ情報を取得
   121                                          ;------------------------------------------
   122 000005A4 68[B800]E8E2FC83C4-             cdecl get_drive_param, BOOT
   122 000005AC 02                 
   123 000005AD 83F800                          cmp ax, 0
   124                                  .10Q:
   125 000005B0 750C                            jne .10E
   126                                  .10T:
   127 000005B2 68[4C06]E808FB83C4-             cdecl puts, .e0
   127 000005BA 02                 
   128 000005BB E821FB                          call reboot
   129                                  .10E:
   130                                  
   131                                          ;------------------------------------------
   132                                          ; ドライブ情報を取得
   133                                          ;------------------------------------------
   134 000005BE A1[B800]                        mov ax, [BOOT + drive.no]
   135 000005C1 6A046A106A0268-                 cdecl itoa, ax, .p1, 2, 16, 0b0100
   135 000005C8 [2D06]50E83EFC83C4-
   135 000005D0 0A                 
   136 000005D1 A1[BA00]                        mov ax, [BOOT + drive.cyln]
   137 000005D4 6A046A106A0468-                 cdecl itoa, ax, .p2, 4, 16, 0b0100
   137 000005DB [3506]50E82BFC83C4-
   137 000005E3 0A                 
   138 000005E4 A1[BC00]                        mov ax, [BOOT + drive.head]
   139 000005E7 6A046A106A0268-                 cdecl itoa, ax, .p3, 2, 16, 0b0100
   139 000005EE [3F06]50E818FC83C4-
   139 000005F6 0A                 
   140 000005F7 A1[BE00]                        mov ax, [BOOT + drive.sect]
   141 000005FA 6A046A106A0268-                 cdecl itoa, ax, .p4, 2, 16, 0b0100
   141 00000601 [4706]50E805FC83C4-
   141 00000609 0A                 
   142 0000060A 68[2406]E8B0FA83C4-             cdecl puts, .s1
   142 00000612 02                 
   143                                  
   144                                          ;------------------------------------------
   145                                          ; 次のステージへ移行
   146                                          ;------------------------------------------
   147 00000613 EB52                            jmp stage_3rd
   148                                  
   149                                          ;------------------------------------------
   150                                          ; データ
   151                                          ;------------------------------------------
   152 00000615 326E64207374616765-     .s0     db "2nd stage...", 0x0A, 0x0D, 0
   152 0000061E 2E2E2E0A0D00       
   153 00000624 2044726976653A3078      .s1     db " Drive:0x"
   154 0000062D 20202C20433A3078        .p1     db "  , C:0x"
   155 00000635 202020202C20483A30-     .p2     db "    , H:0x"
   155 0000063E 78                 
   156 0000063F 20202C20533A3078        .p3     db "  , S:0x"
   157 00000647 20200A0D00              .p4     db "  ", 0x0A, 0x0D, 0
   158 0000064C 43616E277420676574-     .e0     db "Can't get drive parameter.", 0
   158 00000655 206472697665207061-
   158 0000065E 72616D657465722E00 
   159                                  
   160                                  ;***********************************************************
   161                                  ;  ブート処理の第3ステージ
   162                                  ;***********************************************************
   163                                  stage_3rd:
   164                                          ;------------------------------------------
   165                                          ; 文字列を表示
   166                                          ;------------------------------------------
   167 00000667 68[E406]E853FA83C4-             cdecl puts, .s0
   167 0000066F 02                 
   168                                  
   169                                          ;------------------------------------------
   170                                          ; プロテクトモードで使用するフォントは、
   171                                          ; BIOSに内蔵されたものを流用する
   172                                          ;------------------------------------------
   173 00000670 68[0002]E857FC83C4-             cdecl get_font_adr, FONT
   173 00000678 02                 
   174                                  
   175                                          ;------------------------------------------
   176                                          ; フォントアドレスの表示
   177                                          ;------------------------------------------
   178 00000679 6A046A106A0468-                 cdecl itoa, word[FONT.seg], .p1, 4, 16, 0b0100
   178 00000680 [0107]FF36[0002]E8-
   178 00000687 83FB83C40A         
   179 0000068C 6A046A106A0468-                 cdecl itoa, word[FONT.off], .p2, 4, 16, 0b0100
   179 00000693 [0607]FF36[0202]E8-
   179 0000069A 70FB83C40A         
   180 0000069F 68[F306]E81BFA83C4-             cdecl puts, .s1
   180 000006A7 02                 
   181                                  
   182                                          ;------------------------------------------
   183                                          ; メモリ情報の取得と表示
   184                                          ;------------------------------------------
   185 000006A8 E842FC                          cdecl get_mem_info
   186                                  
   187 000006AB 66A1[0402]                      mov eax, [ACPI_DATA.adr]
   188 000006AF 6683F800                        cmp eax, 0
   189 000006B3 742D                            je .10E
   190                                  
   191 000006B5 6A046A106A0468-                 cdecl itoa, ax, .p4, 4, 16, 0b0100
   191 000006BC [1F07]50E84AFB83C4-
   191 000006C4 0A                 
   192 000006C5 66C1E810                        shr eax, 16
   193 000006C9 6A046A106A0468-                 cdecl itoa, ax, .p3, 4, 16, 0b0100
   193 000006D0 [1B07]50E836FB83C4-
   193 000006D8 0A                 
   194 000006D9 68[1007]E8E1F983C4-             cdecl puts, .s2
   194 000006E1 02                 
   195                                  .10E:
   196                                  
   197                                          ;------------------------------------------
   198                                          ; 処理の終了
   199                                          ;------------------------------------------
   200 000006E2 EBFE                            jmp $
   201                                  
   202                                          ;------------------------------------------
   203                                          ; データ
   204                                          ;------------------------------------------
   205 000006E4 337264207374616765-     .s0     db "3rd stage...", 0x0A, 0x0D, 0
   205 000006ED 2E2E2E0A0D00       
   206 000006F3 20466F6E7420416464-     .s1     db " Font Address="
   206 000006FC 726573733D         
   207 00000701 5A5A5A5A3A              .p1     db "ZZZZ:"
   208 00000706 5A5A5A5A0A0D00          .p2     db "ZZZZ", 0x0A, 0x0D, 0
   209 0000070D 0A0D00                          db 0x0A, 0x0D, 0
   210 00000710 204143504920646174-     .s2     db " ACPI data="
   210 00000719 613D               
   211 0000071B 5A5A5A5A                .p3     db "ZZZZ"
   212 0000071F 5A5A5A5A0A0D00          .p4     db "ZZZZ", 0x0A, 0x0D, 0
   213                                  
   214                                  ;***********************************************************
   215                                  ;  パディング（このファイルは8Kバイトとする）
   216                                  ;***********************************************************
   217 00000726 00<rept>                        times BOOT_SIZE - ($ - $$) db 0
