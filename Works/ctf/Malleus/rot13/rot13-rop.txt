0x40071a: ret
0x400680: repz ret
0x400960: leave; ret
0x4006b8: pop rbp; ret
0x40095f: dec ecx; ret
0x4009d3: pop rdi; ret
0x4009d2: pop r15; ret
0x40067f: add bl,dh; ret
0x4005d3: add esp,0x8; ret
0x4005d2: add rsp,0x8; ret
0x40079f: nop; pop rbp; ret
0x4009bc: fmul [rax-0x7d]; ret
0x4009d1: pop rsi; pop r15; ret
0x4009d0: pop r14; pop r15; ret
0x40067e: add [rax],al; repz ret
0x40067d: add [rax],r8b; repz ret
0x4006f5: nop [rax]; pop rbp; ret
0x4005d0: call rax; add rsp,0x8; ret
0x4006b6: add [rax],al; pop rbp; ret
0x400717: add [rcx],al; pop rbp; ret
0x4006b5: add [rax],r8b; pop rbp; ret
0x4009dd: add [rax],al; add bl,dh; ret
0x40067b: nop [rax+rax*1+0x0]; repz ret
0x4009e5: sub esp,0x8; add rsp,0x8; ret
0x4009e4: sub rsp,0x8; add rsp,0x8; ret
0x4009cf: pop rbp; pop r14; pop r15; ret
0x4009ce: pop r13; pop r14; pop r15; ret
0x4006f3: jmp rax; nop [rax]; pop rbp; ret
0x40095a: add eax,0xfffca0e8; dec ecx; ret
0x4009d7: nop cs:[rax+rax*1+0x0]; repz ret
0x4006b3: nop [rax+rax*1+0x0]; pop rbp; ret
0x40067a: hlt; nop [rax+rax*1+0x0]; repz ret
0x4009dc: add [rax],al; add [rax],al; repz ret
0x4009d5: nop; nop cs:[rax+rax*1+0x0]; repz ret
0x4009cd: pop rsp; pop r13; pop r14; pop r15; ret
0x4009cc: pop r12; pop r13; pop r14; pop r15; ret
0x400679: add ah,dh; nop [rax+rax*1+0x0]; repz ret
0x400715: or [rax],esp; add [rcx],al; pop rbp; ret
0x4005cd: shl [rdx+rax*1-0x1],0xd0; add rsp,0x8; ret
0x4006b1: jmp rax; nop [rax+rax*1+0x0]; pop rbp; ret
0x4009db: add [rax],al; add [rax],al; add bl,dh; ret
0x4009e2: add [rax],al; sub rsp,0x8; add rsp,0x8; ret
0x40079a: call 0x400640 <setvbuf@plt>; nop; pop rbp; ret
0x400678: and [rax],al; hlt; nop [rax+rax*1+0x0]; repz ret
0x40095b: call 0x400600 <__stack_chk_fail@plt>; leave; ret
0x4009cb: pop rbp; pop r12; pop r13; pop r14; pop r15; ret
0x400718: add [rbp-0x3d],ebx; nop [rax+rax*1+0x0]; repz ret
0x4005ce: je 0x4005d2 <_init+18>; call rax; add rsp,0x8; ret
0x4006f0: adc [rax+0x0],ah; jmp rax; nop [rax]; pop rbp; ret
0x4006ee: mov edi,0x601058; jmp rax; nop [rax]; pop rbp; ret
0x4009da: test [rax],al; add [rax],al; add [rax],al; repz ret
0x400675: adc eax,0x200976; hlt; nop [rax+rax*1+0x0]; repz ret
0x400677: or [rax],esp; add ah,dh; nop [rax+rax*1+0x0]; repz ret
0x4009c9: or [rbx+0x5d],bl; pop r12; pop r13; pop r14; pop r15; ret
0x400714: outs dx,ds:[rsi]; or [rax],esp; add [rcx],al; pop rbp; ret
0x4006ef: pop rax; adc [rax+0x0],ah; jmp rax; nop [rax]; pop rbp; ret
0x4006ed: pop rbp; mov edi,0x601058; jmp rax; nop [rax]; pop rbp; ret
0x400712: mov [rip+0x20096f],0x1 # 0x601088 <completed>; pop rbp; ret
0x400798: mov edi,eax; call 0x400640 <setvbuf@plt>; nop; pop rbp; ret
0x400797: mov rdi,rax; call 0x400640 <setvbuf@plt>; nop; pop rbp; ret
0x4006ae: adc [rax+0x0],ah; jmp rax; nop [rax+rax*1+0x0]; pop rbp; ret
0x4006ac: mov edi,0x601058; jmp rax; nop [rax+rax*1+0x0]; pop rbp; ret
0x4005ca: add [rax-0x7b],cl; shl [rdx+rax*1-0x1],0xd0; add rsp,0x8; ret
0x400673: add bh,bh; adc eax,0x200976; hlt; nop [rax+rax*1+0x0]; repz ret
0x400716: and [rax],al; add [rbp-0x3d],ebx; nop [rax+rax*1+0x0]; repz ret
0x4005cc: test eax,eax; je 0x4005d2 <_init+18>; call rax; add rsp,0x8; ret
0x4005cb: test rax,rax; je 0x4005d2 <_init+18>; call rax; add rsp,0x8; ret
0x400672: add dil,dil; adc eax,0x200976; hlt; nop [rax+rax*1+0x0]; repz ret
0x400674: call [rip+0x200976] # 0x600ff0; hlt; nop [rax+rax*1+0x0]; repz ret
0x400713: add eax,0x20096f; add [rbp-0x3d],ebx; nop [rax+rax*1+0x0]; repz ret
0x4006ad: pop rax; adc [rax+0x0],ah; jmp rax; nop [rax+rax*1+0x0]; pop rbp; ret
0x4006ab: pop rbp; mov edi,0x601058; jmp rax; nop [rax+rax*1+0x0]; pop rbp; ret
0x400792: mov esi,0x0; mov rdi,rax; call 0x400640 <setvbuf@plt>; nop; pop rbp; ret
0x400959: je 0x400960 <main+446>; call 0x400600 <__stack_chk_fail@plt>; leave; ret
0x400670: movabs ds:0x20097615ff004007,al; add ah,dh; nop [rax+rax*1+0x0]; repz ret
0x400795: add [rax],al; mov rdi,rax; call 0x400640 <setvbuf@plt>; nop; pop rbp; ret
0x4005c8: or ah,[rax]; add [rax-0x7b],cl; shl [rdx+rax*1-0x1],0xd0; add rsp,0x8; ret
0x400711: inc esi; add eax,0x20096f; add [rbp-0x3d],ebx; nop [rax+rax*1+0x0]; repz ret
0x400791: add [rsi+0x0],bh; mov rdi,rax; call 0x400640 <setvbuf@plt>; nop; pop rbp; ret
0x4005c9: and [rax],al; test rax,rax; je 0x4005d2 <_init+18>; call rax; add rsp,0x8; ret
0x4005c6: add eax,0x200a2d; test rax,rax; je 0x4005d2 <_init+18>; call rax; add rsp,0x8; ret
0x4005c7: sub eax,0x4800200a; test eax,eax; je 0x4005d2 <_init+18>; call rax; add rsp,0x8; ret
0x40066e: mov edi,0x4007a2; call [rip+0x200976] # 0x600ff0; hlt; nop [rax+rax*1+0x0]; repz ret
0x40066d: mov rdi,0x4007a2; call [rip+0x200976] # 0x600ff0; hlt; nop [rax+rax*1+0x0]; repz ret
0x400957: add [rax],al; je 0x400960 <main+446>; call 0x400600 <__stack_chk_fail@plt>; leave; ret
0x400954: and eax,0x28; je 0x400960 <main+446>; call 0x400600 <__stack_chk_fail@plt>; leave; ret
0x400952: xor esi,ds:0x28; je 0x400960 <main+446>; call 0x400600 <__stack_chk_fail@plt>; leave; ret
0x400951: xor rsi,ds:0x28; je 0x400960 <main+446>; call 0x400600 <__stack_chk_fail@plt>; leave; ret
0x400950: xor rsi,fs:0x28; je 0x400960 <main+446>; call 0x400600 <__stack_chk_fail@plt>; leave; ret
0x400676: jbe 0x400681 <_dl_relocate_static_pie+1>; and [rax],al; hlt; nop [rax+rax*1+0x0]; repz ret
0x40094f: clc; xor rsi,fs:0x28; je 0x400960 <main+446>; call 0x400600 <__stack_chk_fail@plt>; leave; ret
0x40070d: call 0x400690 <deregister_tm_clones>; mov [rip+0x20096f],0x1 # 0x601088 <completed>; pop rbp; ret
0x4005c5: mov eax,[rip+0x200a2d] # 0x600ff8; test rax,rax; je 0x4005d2 <_init+18>; call rax; add rsp,0x8; ret
0x4005c4: mov rax,[rip+0x200a2d] # 0x600ff8; test rax,rax; je 0x4005d2 <_init+18>; call rax; add rsp,0x8; ret
0x400955: sub [rax],al; add [rax],al; je 0x400960 <main+446>; call 0x400600 <__stack_chk_fail@plt>; leave; ret
0x40066a: or [rax+0x0],eax; mov rdi,0x4007a2; call [rip+0x200976] # 0x600ff0; hlt; nop [rax+rax*1+0x0]; repz ret
0x40094d: mov esi,[rbp-0x8]; xor rsi,fs:0x28; je 0x400960 <main+446>; call 0x400600 <__stack_chk_fail@plt>; leave; ret
0x40094c: mov rsi,[rbp-0x8]; xor rsi,fs:0x28; je 0x400960 <main+446>; call 0x400600 <__stack_chk_fail@plt>; leave; ret
0x40070b: mov ebp,esp; call 0x400690 <deregister_tm_clones>; mov [rip+0x20096f],0x1 # 0x601088 <completed>; pop rbp; ret
0x40070a: mov rbp,rsp; call 0x400690 <deregister_tm_clones>; mov [rip+0x20096f],0x1 # 0x601088 <completed>; pop rbp; ret
0x40094e: jne 0x400948 <main+422>; xor rsi,fs:0x28; je 0x400960 <main+446>; call 0x400600 <__stack_chk_fail@plt>; leave; ret
0x400709: push rbp; mov rbp,rsp; call 0x400690 <deregister_tm_clones>; mov [rip+0x20096f],0x1 # 0x601088 <completed>; pop rbp; ret
